/*Runtime: 36 ms, faster than 5.37% of C++ online submissions for Path Sum.
Memory Usage: 21.4 MB, less than 6.25% of C++ online submissions for Path Sum.*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool hasPathSum(TreeNode* root, int sum) {
        if(!root)
            return false;
        if(!root->left && !root->right)
        {
            return (root->val==sum);
        }
        
        bool l = hasPathSum(root->left,sum-root->val);
        bool r = hasPathSum(root->right,sum-root->val);
        
        return (l || r);
    }
};
