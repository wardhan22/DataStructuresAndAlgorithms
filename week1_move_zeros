/*
Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Example:

Input: [0,1,0,3,12]
Output: [1,3,12,0,0]

Note:

You must do this in-place without making a copy of the array.
Minimize the total number of operations.

Edge cases
[0,0,0,1]
[1,1,1,1]
[0,0,0,0]
[1,1,1,0]

Runtime: 8 ms, faster than 98.98% of C++ online submissions for Move Zeroes.
Memory Usage: 9 MB, less than 100.00% of C++ online submissions for Move Zeroes.
*/

class Solution {
public:
    void moveZeroes(vector<int>& arr) {
        int i=0,j=0;
        bool zeroFound=false;
       for(int i=0;i<arr.size();)
       {
           if(arr[i]!=0)
           {
               if(zeroFound)
               {
                   swap(arr[i],arr[j]);
               }
               
               i++;
               j++;
           }
           else
           {
               zeroFound=true;
               i++;
           }
       }
    }
};
