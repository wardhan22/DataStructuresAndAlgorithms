/*Runtime: 20 ms, faster than 17.48% of C++ online submissions for Minimum Depth of Binary Tree.
Memory Usage: 19.9 MB, less than 64.28% of C++ online submissions for Minimum Depth of Binary Tree.*/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int minDepth(TreeNode* root) {
        int l,r;
        if(!root)
            return 0;
        if(!root->left && !root->right)
            return 1;
        if(root->left)
           l= minDepth(root->left);
        else
            l=INT_MAX;
        
        if(root->right)
            r = minDepth(root->right);
        else
            r=INT_MAX;
        if(l<r)
            return l+1;
        else
            return r+1;
    }
};
