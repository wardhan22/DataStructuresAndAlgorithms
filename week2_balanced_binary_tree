/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int isHeightBalanced(TreeNode *root, bool& isBal)
    {
        if(!root)
            return 0;
        
        int left = isHeightBalanced(root->left, isBal);
        int right = isHeightBalanced(root->right,isBal);
        cout<<"l "<<left<<" "<<right<<endl;
        if(abs(left-right)>1)
            isBal=false;
            return max(left,right)+1;
    }
    
    bool isBalanced(TreeNode* root) {
      bool isBal = true;;
       cout<<isHeightBalanced(root,isBal);
        return isBal;
        
    }
};
