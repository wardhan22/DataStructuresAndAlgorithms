/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/*Runtime: 12 ms, faster than 51.28% of C++ online submissions for Linked List Cycle.
Memory Usage: 7.9 MB, less than 100.00% of C++ online submissions for Linked List Cycle.*/
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(!head || !head->next)
            return false;
        auto slow=head,fast=head;
        while(fast && fast->next)
        {
            slow=slow->next;
            fast=fast->next->next;
            if(slow==fast)
            {
                return true;
            }
        }
        return false;
    }
};
