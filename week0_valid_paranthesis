class Solution {
public:
    bool isOpposite(char &a, char &b)
    {
        if(a=='(' && b==')')
            return true;
        if(a=='{' && b=='}')
            return true;
        if(a=='[' && b==']')
            return true;
        return false;
    }
    bool isValid(string s) {
        stack<char> st;
        if(s=="")
            return true;
        
        int len = s.length();
        if(len%2 != 0)
            return false;
        
        if(s[0]==')' || s[0]=='}' || s[0]==']')
            return false;
        
        if(s[len-1]=='(' || s[len-1]=='{' || s[len-1]=='[')
            return false;
        
        st.push(s[0]);
        int i=1;
        while(i<len)
        {
           if(s[i]=='(' || s[i]=='{' || s[i]=='[') 
               st.push(s[i]);
            else
            {
                char top= st.top();
                st.pop();
                if(!isOpposite(top,s[i]))
                    return false;
            }
            i++;
        }
        return true;
    }
};
