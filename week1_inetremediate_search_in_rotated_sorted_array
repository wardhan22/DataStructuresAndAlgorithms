/*Runtime: 12 ms, faster than 19.90% of C++ online submissions for Search in Rotated Sorted Array.
Memory Usage: 11.1 MB, less than 6.03% of C++ online submissions for Search in Rotated Sorted Array.*/

class Solution {
public:
    int search(vector<int>& nums, int target) {
        int size= nums.size();
        int low=0;
        int high=size-1;
        while(low<=high)
        {
            int mid=low+(high-low)/2;
            if(nums[mid]==target)
                return mid;
            else if(nums[mid]>=nums[low])
            {
               if(target>=nums[low] && target <nums[mid])
               {
                   high=mid-1;
               }
               else
               {
                   low=mid+1;
               }
            }
            else
            {
                if(target>nums[mid] && target <=nums[high])
                    low=mid+1;
                else
                    high=mid-1;
            }
        }
        return -1;
    }
};
